# apex_arc_engine/data_ingestion/real_time/statcast.py
import requests
import pandas as pd
from datetime import date
from utils.logger import setup_logger

logger = setup_logger(__name__)

def fetch_statcast_data(game_date: date) -> pd.DataFrame:
    try:
        url = f"https://api.statcast.example.com/data?date={game_date}"  # Replace with real API
        response = requests.get(url, timeout=10)
        response.raise_for_status()
        data = response.json()
        df = pd.DataFrame(data["statcast"])
        required_columns = ["player_id", "exit_velocity", "launch_angle", "barrel_percentage"]
        if not all(col in df.columns for col in required_columns):
            raise ValueError("Missing required Statcast columns")
        logger.info(f"Fetched Statcast data for {game_date} with {len(df)} records")
        return df
    except requests.RequestException as e:
        logger.error(f"Failed to fetch Statcast data: {e}")
        raise
    except ValueError as e:
        logger.error(f"Data validation error: {e}")
        raise